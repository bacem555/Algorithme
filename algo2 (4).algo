ALGORITHM algo2
VAR
    tab1,tab2:  ARRAY_OF INTEGER[100];
    sum:INTEGER=0;
    i,j:INTEGER;
    verify:BOOLEAN;
BEGIN
   FOR i FROM 0 TO tab1.length-1 STEP step  DO
   verify:=false;
   FOR j FROM 0 TO tab2.length-1 STEP step  DO
    IF (tab1[i]=tab2[j]) THEN
        verify:=true;
        break;
    END_IF
    IF (verify=false) THEN
    sum+=tab1[i];
    END_IF
   END_FOR
   END_FOR
FOR j FROM 0 TO tab2.length-1 STEP step  DO
   verify:=false;
   FOR i FROM 0 TO tab1.length-1 STEP step  DO
    IF (tab2[j]=tab1[i]) THEN
        verify:=true;
        break;
    END_IF
    IF (verify=false) THEN
    sum=sum+tab2[j];
    END_IF
   END_FOR
   END_FOR
   write(sum);
END













PROCEDURE doc_product(v1,v2: ARRAY_OF INTEGER,ps:INTEGER;)
VAR
    i:=INTEGER;
BEGIN
IF (v1.length<>v2.length) THEN
    write("we cant calculate two vectors with different length")
    ps:=nan
END_IF     
FOR i FROM 0 TO v1.length-1 STEP step  DO
    ps=v1[i]*v2[i];
END_FOR            
END
ALGORITHM algo2p2
VAR
 victors:  ARRAY_OF array;
 i,j:INTEGER;
 ps:INTEGER;
BEGIN
FOR i FROM 0 TO victors.length-2 STEP step  DO
    FOR j FROM i+1 TO victors.length-1 STEP step  DO
        doc_product(victors[i],victors[j],ps);
        IF (ps=0) THEN
            write(victors[i],victors[j],"sont de vecteurs orthogonales")
        END_IF
    END_FOR
END_FOR    
END
